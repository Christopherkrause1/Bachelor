Nutzen:
Das Programm dient dazu die Schadensrate und die effektive
Dotierungskonzentration für beliebige Zeiten, Temperaturen, Sensoren und
Fluenzen zu berechnen und zu modellieren.

Bestandteile:
Bestehend aus vier Programmen (configuration.py, damage_rate.py, n_eff.py,
merging_data.py) soll lediglich der Code in der configuration.py von dem
Nutzer verändert werden. Sind die Daten und Parameter in der configuration.py
wie gewünscht eingestellt worden, so kann mit dem Ausführen des Programmes
damage_rate.py die Schadensrate und mit dem Programm n_eff.py die
Dotierungskonzentration modelliert werden.





configuration.py:
Hier werden zunächst die wichtigen Bibliotheken importiert. Der Import
der merging_data.py zunächst auskommentiert und sollte nur verwendet werden,
wenn man verschiedene Textdateien verbinden und modellieren möchte.
In der darunter stehenden Zeile muss die Textdatei in die
np.genfromtxt-Funktion geschrieben werden um die Schadensrate und die
Dotierungskonzentration daraus berechnen zu können. Aus dieser Datei soll
die Zeit und die zugehörige Temperatur genommen werden.

Die darauf folgende Zeile darf nur verwendet werden, wenn die
merging_data.py verwendet wird und passt die Zeit der verbundenen
Textdateien an.

In der Zeile danach wird die Möglichkeit geboten wahlweise zusätzlich die
Temperatur in den zu erstellenden Plots darzustellen.
Die darauf folgenden Zeile bietet die Möglichkeit wahlweise zusätzlich die
jeweilige Funktion bei einer konstanten Temperatur darzustellen.

Nun werden die konstanten Parameter der beiden Funktionen aufgelistet. Jedem
Parameter muss ein Wert zugeordnet Werten. Als Standardeinstellung wird eine
Diode des Typs "WE-25k" verwendet.
Zum Schluss steht auch eine weitere Parametereinstellung der Diode "WI-4k"
für die Dotierungskonzentration zur Verfügung.

Hinweise zur configuration.py:
Befindet sich die Textdatei innerhalb eines weiteren Directories, so muss dieses
mit in die np.genfromtxt-Funktion angegeben werden. Gibt es Zeilen ohne Daten,
so müssen diese auskommentiert werden.
Sind die Variablen 'time' und 'temperature' nicht in der ersten und zweiten
Spalte der Textdatei muss mit der Option "usecols" die richtigen Spalten
genommen werden. Die Variablen 'time' und 'temperature' dürfen nicht umbenannt
werden. Auch eine weitere np.genfromtxt-Funktion darunter würde zu einem Fehler
führen, wenn neue Namen für die Variablen verwendet werden. Es darf nur der Name
der Textdatei verändert werden.





damage_rate.py/n_eff.py:
Beide Programme haben die gleiche Struktur und müssen nach den getroffenen
Einstellungen in der configuration.py ausgeführt werden. Diese wird in
beide Programme importiert. Danach werden Unixzeiten, falls sie verwendet
werden, in Sekunden umgerechnet.
Die jeweilige Funktion, die das Programm modellieren soll wird in einzelnen
Teilen berechnet. Zusätzlich wird aus den eigentlichen Zeitdaten ein neuer
Zeitarray erstellt, welcher eine Korrektur für ändernde Temperaturen beschreibt.

Der neue Zeitarray, sowie der Temperaturarray durchläuft eine Schleife für
die Erstellung von interpolierten Werten um die Genauigkeit der Funktion zu
erhöhen.
Die nachfolgende Funktion erstellt einen Plot der Daten, welcher auf dem
Bildschirm erscheint.

Hinweise zur damage_rate.py/n_eff.py:
Beide Programme sollten unter normalen Umständen nicht verändert werden.
Lediglich die configuration.py sollte angepasst werden.







merging_data.py:
Dieses Programm verbindet alle Textdateien in alphabetischer Reihenfolge
miteinander und produziert eine merging_file.txt in dem Directory dieses
Programmes. In dieser Textdatei wird zusätzlich zu Beginn jeder neu angefügten
Datei der Name dieser Datei angezeigt.
Diese Datei wird mit der configuration.py verbunden, indem die 4. Zeile in der
configuration.py nicht auskommentiert ist. In diesem Fall wid bei der Ausführung
von damage.py oder n_eff.py nach einem Ordner gefragt in dem sich die
Textdateien befinden.

Hinweise merging_data.py:
Die produzierte merge_file.txt muss  in der np.genfromtxt-Funktion angegeben
werden. Gehen die Zeiten der einzelnen Textdateien nicht nahtlos ineinander
über, so muss zusätzlich die Zeile 12 verwendet werden. Der neue Zeitarray
wird während der Schleife über alle Textdateien erstellt und eliminiert
Zeitabstände zwischen den Textdateien. (Letzter Zeitpunkt der ersten
Textdatei = erster Zeitpunkt der zweiten Textdatei)
Die zu verbindenden Textdateien dürfen nicht in demselben Directory wie dieses
Programm sein, da die enstehende merge_file.txt sonst bei der nächsten
Anwendung mit verbunden wird.
